---
title: "Análisis de Redes"
author: "Agustín Gómez Meléndez"
format: html
editor: visual
---


## Social Network Analysis in R

Adaptado de Wilson Tucker August 28, 2017 Fuente: <https://rpubs.com/wctucker/302110>

Descargue los datos en [LINK](https://www.dropbox.com/sh/1hcg3m65ymsmxeu/AABvz_Ca5cKYWbGOVIXfbQv6a?dl=0)

## Descripción

Social Network Analysis is a set of methods used to visualize networks, describe specific characteristics of overall network structure, and build mathematical and statistical models of network structures and dynamics (Luke 2015). Social networks are formally defined as a set of nodes that are tied by one or more types of relations (Scott and Carrington 2012). Nodes are most commonly persons or organizations, but in principle any units that can be connected to other units can be studied as nodes. For example, social network analysis has been used to study web pages, journal articles, countries, and neighborhoods. Dr. Paul Beckman and Jennifer Chi even used social network analysis to study the impact of baseball teammates on offensive metrics (2011). Social Network Analysis can be used in many areas to evaluate the impact of other entities, instead of evaluating the characteristics of an individual entity. This tutorial is an overview of basic Social Network Analysis functions. This tutorial draws from another tutorial by Katherine Ognyanova that has a more in depth look at some of the features of igraph (2016).

As a way to introduce Social Network Analysis to the beginner, this tutorial will take advantage of the popular game "Six Degrees of Kevin Bacon". Six Degrees of Kevin Bacon is a parlour game based on the "six degrees of separation" concept, which posits that any two people on Earth are six or fewer acquaintance links apart. Movie buffs challenge each other to find the shortest path between an arbitrary actor and prolific character actor Kevin Bacon. It rests on the assumption that anyone involved in the Hollywood film industry can be linked through their film roles to Bacon within six steps. The game requires a group of players to try to connect any such individual to Kevin Bacon as quickly as possible and in as few links as possible ("Six Degrees of Kevin Bacon" 2017). For example, Tom Hanks has a "Bacon Score" of 1 as he was with Kevin Bacon in the movie Apollo 13. This tutorial will utilize three movies, (Apollo 13, Forest Gump, and The Rock) to build a social network of actors.

## Librerias a utlizar


```{r}
library(igraph)
library(readr)
```


The igraph package provides tools for network analysis. The main goals of the igraph library are to provide a set of data types and functions for 1) pain-free implementation of graph algorithms, 2) fast handling of large graphs, with millions of vertices and edges, 3) allowing rapid prototyping via high level languages like R. More information is available at <http://igraph.org>.

The readr package provides a fast and friendly way to read rectangular data (like 'csv', 'tsv', and 'fwf'). It is designed to flexibly parse many types of data found in the wild, while still cleanly failing when data unexpectedly changes.


```{r}
actors <- read.csv("https://github.com/agmelendez/Observatorio/blob/76dd025e8fc3d272f9d7b24505221a719289efac/Actors.csv")
actors
movies <- read.csv("https://github.com/agmelendez/Observatorio/blob/76dd025e8fc3d272f9d7b24505221a719289efac/Movies.csv")
movies
```


The actors data frame is a list of all of the referenced actors from the three previously mentioned movies. The eight actors in this network are Tom Hanks, Gary Sinise, Robin Wright, Bill Paxton, Kevin Bacon, Ed Harris, Sean Connery and Nicolas Cage. Note that these are only the biggest stars from these movies in order to keep the network small.

These are the actor's name, gender, and if they have won or been nominated for an Academy Award for Best Actor or Actress.

The movies data frame contains connections between actors based on what movies they were in together.

## Librerias a utlizar

These are the actors' names who were together and what movies they appeared in together. For example, Tom Hanks and Gary Sinise appeared together in Forest Gump and Apollo 13 as Forest Gump and Lieutenant Dan, and Jim Lovell and Ken Mattingly respectively.

The first step in building the network is to create an igraph object. We will use the igraph function graph.data.frame to create this object from our existing data frames. The d variable takes the edges connecting the actor nodes that are held in the movies dataframe that was created, the vertices variable takes the actor nodes that are listed in the actors dataframe. There are social networks where the relationship is directional, for example a professor may have a directed relationship where he teaches students. As this is a list of actors who were in various movies together, this is an undirected network so the directed variable takes an argument of FALSE.


```{r}
actorNetwork <- graph_from_data_frame(d=movies, vertices=actors, directed=F)
`````



The vertices variable requires one column of node identifiers, which in this case are the actors’ names. The d argument requires a dataframe in two columns of connections between vertice identifiers. The additional columns in the movies and actors dataframes give other identifying variables to the edges and nodes respectively. For example, the third column in the movies dataframe which names the movie that the two actors share can be used as a categorical variable to describe the connection.


```{r}
plot(actorNetwork)
```


This allows you to visualize the network without any additional information. In order to make a diagram that depicts additional information, other graphing variables can be used. For example, if I want to know what movies actors were in together I could color code the links between actors.


```{r}
E(actorNetwork)$color <- ifelse(E(actorNetwork)$Movie == "Forest Gump", "green", 
                         ifelse(E(actorNetwork)$Movie == "Apollo 13", "black",
                                "orange"))

# Re-Plot the network
plot(actorNetwork)
```


Now actors that were in Forest Gump are connected with green edges, Apollo 13 are connected with black edges, and those from The Rock are connected with orange edges. You can also color code nodes based on characteristics of the actors.


```{r}
V(actorNetwork)$color <- ifelse(V(actorNetwork)$BestActorActress == "Winner", "gold",
                         ifelse(V(actorNetwork)$BestActorActress == "Nominated","grey",
                                "lightblue"))

#Re-Plot the Network
plot(actorNetwork)
```


## Como definir leyendas

Finally, it can be useful to create a legend to show what the color coding for the graph means. For this the legend function works well.


```{r}
plot(actorNetwork, vertex.frame.color="white")

legend("bottomright", c("Winner","Nominee", "Not Nominated"), pch=21,
  col="#777777", pt.bg=c("gold","grey","lightblue"), pt.cex=2, cex=.8)


legend("topleft", c("Forest Gump","Apollo 13", "The Rock"), 
       col=c("green","black","orange"), lty=1, cex=.8)

```


## Describing the Network

Although visualizing the network can be useful for examining the data at a high level, one of the most important features of social network analysis is the ability to mathematically describe a node's characteristics on the network. The positions of nodes on the network are often described in terms of centrality. Centrally positioned individuals enjoy a position of privilege over those relegated to the circumfrence of the network (Degenne and Forse 1999). The three main types of centrality are degree centrality, betweenness centrality, and closeness centrality.

# Degree Centrality

Degree centrality is simplest of the methods, it measures the number of connections between a node and all other nodes. Looking at the plot above, Nicolas Cage is connected to Sean Connery and Ed Harris, so he should have a degree centrality score of 2. The igraph package has a function, degree, to measure degree centrality.


```{r}
degree(actorNetwork, mode="all")
```


Closeness Centrality Closeness centrality is an evaluation of the proximity of a node to all other nodes in a network, not only the nodes to which it is directly connected. The closeness centrality of a node is defined by the inverse of the average length of the shortest paths to or from all the other nodes in the graph. The absolute closeness of node i to the other nodes j is given by ![](Dropbox/Capturas%20de%20pantalla/Captura%20de%20Pantalla%202022-09-27%20a%20la(s)%2014.55.16.png){width="99" height="29"} . The relative closeness is then calculated by accounting for the number of nodes in the network by: ![](Dropbox/Capturas%20de%20pantalla/Captura%20de%20Pantalla%202022-09-27%20a%20la(s)%2014.55.23.png){width="80" height="15"} For example to calculate raw closeness, Robin Wright is connected to Tom Hanks and Gary Sinist by one link, to Bill Paxton, Kevin Bacon, and Ed Harris by two links, and to Sean Connery and Nicolas Cage by three links for a total of 14 links. To calculate relative closeness, the number of nodes minus one (7) is divided by the raw closeness score (14) for a relative closeness of .5. This corresponds to an average number of links to all other nodes of two.


```{r}
closeness(actorNetwork, mode="all", weights=NA, normalized=T)
```


## Betweenness Centrality

Betweenness centrality offers another way of measuring an individuals centrality. In social networks there can be weakly connected individuals who are still indispensale to certail transactions. Although these individuals may not have a high level of degree centrality, they may be chokepoints through which information moves. The betweenness of a given point to two other points is its capacity of standing on the paths that connect them (Degenne and Forse 1999). To calculate the absolute betweenness centrality for a node, its betweenness for all pairs on the graph must be summed:

![](Dropbox/Capturas%20de%20pantalla/Captura%20de%20Pantalla%202022-09-27%20a%20la(s)%2014.58.27.png){width="268"}

Relative betweenness centrality is then calculated by: ![](Dropbox/Capturas%20de%20pantalla/Captura%20de%20Pantalla%202022-09-27%20a%20la(s)%2014.58.32.png){width="129"}. To calculate relative betweenness in R the function betweenness is used:


```{r}
betweenness(actorNetwork, directed=F, weights=NA, normalized = T)
```


## Bacon Score

As this tutorial has been using the example of Six Degrees of Kevin Bacon to discuss social networks, it is only fitting to calculate each actor's Bacon Score in this social network. The function distances can calculate the shortest paths between nodes on a network. The following code calculates all of the Bacon Scores:


```{r}
distances(actorNetwork, v=V(actorNetwork)["Kevin Bacon"], to=V(actorNetwork), weights=NA)
```

